@{
    ViewData["Title"] = "YAML Converter";
}

<div class="container">
    <div class="tool-header">
        <h1 class="tool-title">YAML Converter</h1>
        <p class="tool-description">
            Convert your YAML data to different formats like JSON, XML, CSV, and HTML.
        </p>
    </div>

    <div class="tab-container">
        <div class="tab-nav">
            <button class="tab-button active" data-tab="yaml-to-json">YAML → JSON</button>
            <button class="tab-button" data-tab="yaml-to-xml">YAML → XML</button>
            <button class="tab-button" data-tab="yaml-to-csv">YAML → CSV</button>
            <button class="tab-button" data-tab="yaml-to-html">YAML → HTML Table</button>
            <button class="tab-button" data-tab="format-yaml">Format YAML</button>
        </div>

        <!-- YAML to JSON Tab -->
        <div class="tab-content" id="yaml-to-json">
            <div class="form-group">
                <label class="form-label">YAML Data:</label>
                <div class="form-control-container">
                    <div class="form-control-header">
                        <span>YAML Input</span>
                        <button type="button" class="btn btn-secondary btn-sm ml-auto" onclick="clearInput('yamlToJsonInput')">Clear</button>
                    </div>
                    <textarea class="form-control" id="yamlToJsonInput" placeholder="- name: John&#10;  age: 25&#10;  city: New York&#10;- name: Jane&#10;  age: 30&#10;  city: London"></textarea>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="convertToJSON()">
                    <span class="loading-spinner" id="jsonLoadingSpinner" style="display: none;"></span>
                    Convert to JSON
                </button>
            </div>
            <div class="results-container" id="jsonResults" style="display: none;">
                <div class="results-header">
                    <span>JSON Result</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard('jsonOutput')">Copy</button>
                </div>
                <div class="results-content">
                    <pre class="form-control" id="jsonOutput"></pre>
                </div>
            </div>
        </div>

        <!-- YAML to XML Tab -->
        <div class="tab-content" id="yaml-to-xml" style="display: none;">
            <div class="form-group">
                <label class="form-label">YAML Data:</label>
                <div class="form-control-container">
                    <div class="form-control-header">
                        <span>YAML Input</span>
                        <button type="button" class="btn btn-secondary btn-sm ml-auto" onclick="clearInput('yamlToXmlInput')">Clear</button>
                    </div>
                    <textarea class="form-control" id="yamlToXmlInput" placeholder="products:&#10;  - name: Laptop&#10;    price: 999.99&#10;    stock: 15&#10;  - name: Mouse&#10;    price: 29.99&#10;    stock: 50"></textarea>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="convertToXML()">
                    <span class="loading-spinner" id="xmlLoadingSpinner" style="display: none;"></span>
                    Convert to XML
                </button>
            </div>
            <div class="results-container" id="xmlResults" style="display: none;">
                <div class="results-header">
                    <span>XML Result</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard('xmlOutput')">Copy</button>
                </div>
                <div class="results-content">
                    <pre class="form-control" id="xmlOutput"></pre>
                </div>
            </div>
        </div>

        <!-- YAML to CSV Tab -->
        <div class="tab-content" id="yaml-to-csv" style="display: none;">
            <div class="form-group">
                <label class="form-label">YAML Data:</label>
                <div class="form-control-container">
                    <div class="form-control-header">
                        <span>YAML Input</span>
                        <button type="button" class="btn btn-secondary btn-sm ml-auto" onclick="clearInput('yamlToCsvInput')">Clear</button>
                    </div>
                    <textarea class="form-control" id="yamlToCsvInput" placeholder="- server: localhost&#10;  port: 8080&#10;  ssl: true&#10;- server: remote&#10;  port: 443&#10;  ssl: true"></textarea>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="convertToCSV()">
                    <span class="loading-spinner" id="csvLoadingSpinner" style="display: none;"></span>
                    Convert to CSV
                </button>
            </div>
            <div class="results-container" id="csvResults" style="display: none;">
                <div class="results-header">
                    <span>CSV Result</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard('csvOutput')">Copy</button>
                </div>
                <div class="results-content">
                    <pre class="form-control" id="csvOutput"></pre>
                </div>
            </div>
        </div>

        <!-- YAML to HTML Table Tab -->
        <div class="tab-content" id="yaml-to-html" style="display: none;">
            <div class="form-group">
                <label class="form-label">YAML Data:</label>
                <div class="form-control-container">
                    <div class="form-control-header">
                        <span>YAML Input</span>
                        <button type="button" class="btn btn-secondary btn-sm ml-auto" onclick="clearInput('yamlToHtmlInput')">Clear</button>
                    </div>
                    <textarea class="form-control" id="yamlToHtmlInput" placeholder="- name: John Doe&#10;  department: Engineering&#10;  salary: 75000&#10;- name: Jane Smith&#10;  department: Marketing&#10;  salary: 65000"></textarea>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="convertToHTML()">
                    <span class="loading-spinner" id="htmlLoadingSpinner" style="display: none;"></span>
                    Convert to HTML Table
                </button>
            </div>
            <div class="results-container" id="htmlResults" style="display: none;">
                <div class="results-header">
                    <span>HTML Table Result</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard('htmlOutput')">Copy HTML</button>
                </div>
                <div class="results-content">
                    <div class="html-preview" id="htmlPreview"></div>
                    <details style="margin-top: 10px;">
                        <summary style="cursor: pointer; font-weight: bold;">View HTML Source</summary>
                        <pre class="form-control" id="htmlOutput" style="margin-top: 10px;"></pre>
                    </details>
                </div>
            </div>
        </div>

        <!-- Format YAML Tab -->
        <div class="tab-content" id="format-yaml" style="display: none;">
            <div class="form-group">
                <label class="form-label">YAML Data:</label>
                <div class="form-control-container">
                    <div class="form-control-header">
                        <span>YAML Input</span>
                        <button type="button" class="btn btn-secondary btn-sm ml-auto" onclick="clearInput('formatYamlInput')">Clear</button>
                    </div>
                    <textarea class="form-control" id="formatYamlInput" placeholder="name:   John&#10;age:30&#10;  city: New York&#10;hobbies:   [reading,  coding]"></textarea>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="formatYAML()">
                    <span class="loading-spinner" id="formatLoadingSpinner" style="display: none;"></span>
                    Format YAML
                </button>
            </div>
            <div class="results-container" id="formatResults" style="display: none;">
                <div class="results-header">
                    <span>Formatted YAML</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard('formatOutput')">Copy</button>
                </div>
                <div class="results-content">
                    <pre class="form-control" id="formatOutput"></pre>
                </div>
            </div>
        </div>
    </div>

    <!-- Alert Container -->
    <div id="alertContainer"></div>
</div>

@section Scripts {
    <script>
        // Tab functionality
        document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', function() {
                const tabId = this.getAttribute('data-tab');

                // Remove active class from all buttons and content
                document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(content => content.style.display = 'none');

                // Add active class to clicked button and show content
                this.classList.add('active');
                document.getElementById(tabId).style.display = 'block';
            });
        });

        function showAlert(message, type = 'error') {
            const alertContainer = document.getElementById('alertContainer');
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type}`;
            alertDiv.innerHTML = `<span>${message}</span>`;

            alertContainer.appendChild(alertDiv);

            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }

        function showLoading(spinnerId, show) {
            const spinner = document.getElementById(spinnerId);
            spinner.style.display = show ? 'inline-block' : 'none';
        }

        function clearInput(inputId) {
            document.getElementById(inputId).value = '';
        }

        async function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            try {
                await navigator.clipboard.writeText(element.textContent);
                showAlert('Copied to clipboard!', 'success');
            } catch (err) {
                showAlert('Copy operation failed.', 'error');
            }
        }

        async function convertToJSON() {
            const input = document.getElementById('yamlToJsonInput').value;
            if (!input.trim()) {
                showAlert('Please enter YAML data.', 'warning');
                return;
            }

            showLoading('jsonLoadingSpinner', true);

            try {
                const response = await fetch('@Url.Action("ConvertToJSON", "YamlTo")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `yamlInput=${encodeURIComponent(input)}`
                });

                const result = await response.json();

                if (result.success) {
                    document.getElementById('jsonOutput').textContent = result.result;
                    document.getElementById('jsonResults').style.display = 'block';
                    showAlert('YAML successfully converted to JSON!', 'success');
                } else {
                    showAlert(result.error, 'error');
                }
            } catch (error) {
                showAlert('An error occurred: ' + error.message, 'error');
            } finally {
                showLoading('jsonLoadingSpinner', false);
            }
        }

        async function convertToXML() {
            const input = document.getElementById('yamlToXmlInput').value;
            if (!input.trim()) {
                showAlert('Please enter YAML data.', 'warning');
                return;
            }

            showLoading('xmlLoadingSpinner', true);

            try {
                const response = await fetch('@Url.Action("ConvertToXML", "YamlTo")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `yamlInput=${encodeURIComponent(input)}`
                });

                const result = await response.json();

                if (result.success) {
                    document.getElementById('xmlOutput').textContent = result.result;
                    document.getElementById('xmlResults').style.display = 'block';
                    showAlert('YAML successfully converted to XML!', 'success');
                } else {
                    showAlert(result.error, 'error');
                }
            } catch (error) {
                showAlert('An error occurred: ' + error.message, 'error');
            } finally {
                showLoading('xmlLoadingSpinner', false);
            }
        }

        async function convertToCSV() {
            const input = document.getElementById('yamlToCsvInput').value;
            if (!input.trim()) {
                showAlert('Please enter YAML data.', 'warning');
                return;
            }

            showLoading('csvLoadingSpinner', true);

            try {
                const response = await fetch('@Url.Action("ConvertToCSV", "YamlTo")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `yamlInput=${encodeURIComponent(input)}`
                });

                const result = await response.json();

                if (result.success) {
                    document.getElementById('csvOutput').textContent = result.result;
                    document.getElementById('csvResults').style.display = 'block';
                    showAlert('YAML successfully converted to CSV!', 'success');
                } else {
                    showAlert(result.error, 'error');
                }
            } catch (error) {
                showAlert('An error occurred: ' + error.message, 'error');
            } finally {
                showLoading('csvLoadingSpinner', false);
            }
        }

        async function convertToHTML() {
            const input = document.getElementById('yamlToHtmlInput').value;
            if (!input.trim()) {
                showAlert('Please enter YAML data.', 'warning');
                return;
            }

            showLoading('htmlLoadingSpinner', true);

            try {
                const response = await fetch('@Url.Action("ConvertToHTML", "YamlTo")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `yamlInput=${encodeURIComponent(input)}`
                });

                const result = await response.json();

                if (result.success) {
                    document.getElementById('htmlOutput').textContent = result.result;
                    document.getElementById('htmlPreview').innerHTML = result.result;
                    document.getElementById('htmlResults').style.display = 'block';
                    showAlert('YAML successfully converted to HTML Table!', 'success');
                } else {
                    showAlert(result.error, 'error');
                }
            } catch (error) {
                showAlert('An error occurred: ' + error.message, 'error');
            } finally {
                showLoading('htmlLoadingSpinner', false);
            }
        }

        async function formatYAML() {
            const input = document.getElementById('formatYamlInput').value;
            if (!input.trim()) {
                showAlert('Please enter YAML data.', 'warning');
                return;
            }

            showLoading('formatLoadingSpinner', true);

            try {
                const response = await fetch('@Url.Action("FormatYAML", "YamlTo")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `yamlInput=${encodeURIComponent(input)}`
                });

                const result = await response.json();

                if (result.success) {
                    document.getElementById('formatOutput').textContent = result.result;
                    document.getElementById('formatResults').style.display = 'block';
                    showAlert('YAML successfully formatted!', 'success');
                } else {
                    showAlert(result.error, 'error');
                }
            } catch (error) {
                showAlert('An error occurred: ' + error.message, 'error');
            } finally {
                showLoading('formatLoadingSpinner', false);
            }
        }
    </script>
}